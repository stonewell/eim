name: Create Assets

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  parser_compilation:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-latest]
        cc: [gcc, clang]
        nvim_tag: [stable]
        exclude:
          - os: windows-2022
            cc: clang
            nvim_tag: stable

          - os: windows-2022
            cc: gcc
            nvim_tag: stable

          - os: ubuntu-latest
            cc: clang
            nvim_tag: stable

        include:
          - os: windows-2022
            cc: cl
            nvim_tag: stable

    name: Parser compilation
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}
      NVIM: ${{ matrix.os == 'windows-2022' && 'nvim-win64\\bin\\nvim.exe' || 'nvim' }}
      ALLOWED_INSTALLATION_FAILURES: ${{ matrix.os == 'windows-2022' && 'rnoweb' }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: nvim-treesitter/nvim-treesitter
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-node@v3

      - name: Install tree-sitter CLI
        run: npm i -g tree-sitter-cli

      - name: Install and prepare Neovim
        env:
          NVIM_TAG: ${{ matrix.nvim_tag }}
        run: |
          bash ./scripts/ci-install-${{ matrix.os }}.sh

      - name: Setup Parsers Cache
        id: parsers-cache
        uses: actions/cache@v3
        with:
          path: |
            ./parser/
            ~/AppData/Local/nvim/pack/nvim-treesitter/start/eim/parser/
          key: ${{ matrix.os }}-${{ matrix.cc }}-${{ matrix.nvim_tag }}-parsers-v1-${{ hashFiles('./lockfile.json', './lua/nvim-treesitter/parsers.lua', './lua/nvim-treesitter/install.lua', './lua/nvim-treesitter/shell_command_selectors.lua') }}

      - name: Compile parsers
        if: ${{ steps.parsers-cache.outputs.cache-hit != 'true' }}
        run: $NVIM --headless -c "lua require'nvim-treesitter.install'.prefer_git=false" -c "TSInstallSync python" -c "q"

      - name: Post compile Windows
        if: matrix.os == 'windows-2022'
        run: cp -r ~/AppData/Local/nvim/pack/nvim-treesitter/start/eim/parser/* parser

      - name: Post Prepare for Archive
        run: |
          mkdir archive
          cp -r parser archive
          cp -r queries archive

      - name: Archive
        uses: ihiroky/archive-action@v1
        with:
          root_dir: archive
          file_path: /tmp/nvim-treesitter-${{ matrix.os }}-${{ matrix.nvim_tag }}.tar.gz

      - uses: actions/upload-artifact@v3
        with:
          name: nvim-treesitter-${{ matrix.os }}-${{ matrix.nvim_tag }}
          path: /tmp/nvim-treesitter-${{ matrix.os }}-${{ matrix.nvim_tag }}.tar.gz

  release_assets:
    name: Release Parsers
    needs: parser_compilation
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3

      - name: Collect all files
        run: |
          mkdir archive
          find . -type f -name "*.tar.gz" -exec cp {} archive \;

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "nvim-treesitter parsers and queries"
          files: |
            archive/*.tar.gz
